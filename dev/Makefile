# Define que os alvos n√£o s√£o nomes de arquivos, mas sim receitas de comandos.
# Isso evita conflitos se um arquivo com o mesmo nome existir.
.PHONY: help setup run update db-init db-migrate db-upgrade

# Se "make" for executado sem um alvo, o primeiro da lista (help) ser√° o padr√£o.
default: help

# Exibe uma mensagem de ajuda com os principais comandos dispon√≠veis.
help:
	@echo "----------------------------------------------------"
	@echo "     Painel de Controle do Projeto de Otimiza√ß√£o    "
	@echo "----------------------------------------------------"
	@echo "Comandos dispon√≠veis:"
	@echo "  make setup      - üöÄ Configura o ambiente pela primeira vez."
	@echo "  make run        - ‚ñ∂Ô∏è  Inicia a API Flask em modo de desenvolvimento."
	@echo "  make update     - üîÑ Atualiza os pre√ßos dos ativos (√∫ltimos 5 dias)."
	@echo ""
	@echo "Comandos de Banco de Dados (com Flask-Migrate):"
	@echo "  make db-init    - Inicia o controle de migra√ß√µes (executar uma vez)."
	@echo "  make db-migrate - Gera um novo arquivo de migra√ß√£o ap√≥s mudan√ßas nos models."
	@echo "  make db-upgrade - Aplica as migra√ß√µes ao banco de dados."
	@echo "----------------------------------------------------"

# Executa a sequ√™ncia completa para configurar o projeto do zero.
setup:
	@echo "üöÄ Configurando o ambiente pela primeira vez..."
	# PASSO 1: Aplica as migra√ß√µes do banco de dados. (Descomente quando usar Flask-Migrate)
	# @make db-upgrade
	@echo "\n1/2 - Populando a tabela de ativos a partir do CSV..."
	flask seed-assets
	@echo "\n2/2 - Buscando o hist√≥rico COMPLETO de pre√ßos (pode demorar)..."
	flask update-prices --full-history
	@echo "\n‚úÖ Ambiente configurado com sucesso!"

# Atalho para iniciar o servidor de desenvolvimento.
run:
	@echo "‚ñ∂Ô∏è  Iniciando a API em http://127.0.0.1:5000 ..."
	flask run

# Executa a atualiza√ß√£o di√°ria de pre√ßos (busca um hist√≥rico curto).
update:
	@echo "üîÑ Atualizando os pre√ßos dos ativos (√∫ltimos 5 dias)..."
	flask update-prices
	@echo "‚úÖ Pre√ßos atualizados."

# --- Comandos para Gerenciamento de Migra√ß√µes de Banco de Dados ---
# Estes comandos s√£o para serem usados com a extens√£o Flask-Migrate,
# que √© a maneira profissional de gerenciar altera√ß√µes na estrutura do seu banco (models).

# Inicializa o diret√≥rio de migra√ß√µes. S√≥ precisa ser executado uma vez na vida do projeto.
db-init:
	@echo "Initializing migrations..."
	flask db init

# Gera um novo arquivo de migra√ß√£o automaticamente ap√≥s voc√™ alterar seus models.
db-migrate:
	@echo "Generating new migration..."
	flask db migrate -m "Nova migra√ß√£o"

# Aplica as migra√ß√µes pendentes ao banco de dados.
db-upgrade:
	@echo "Applying migrations..."
	flask db upgrade